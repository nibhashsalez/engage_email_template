###
# SERVER
###
server.port=8089

###
# BANNER
###
#spring.banner.charset=UTF-8
#spring.banner.location=classpath:banner.txt


spring.mvc.view.prefix: /WEB-INF/jsp/
spring.mvc.view.suffix: .jsp

server.servlet.context-path=/email

#----------master db connection details--------
#spring.datasource.master.url=jdbc:mysql://ss-master-db:3306/crm_master?autoReconnect=true&verifyServerCertificate=false&useSSL=false&requireSSL=false
#spring.datasource.master.url=jdbc:mysql://192.168.1.81:3306/crm_master?autoReconnect=true&verifyServerCertificate=false&useSSL=false&requireSSL=false
spring.datasource.master.url=jdbc:mysql://localhost:3306/crm_master?autoReconnect=true&verifyServerCertificate=false&useSSL=false&requireSSL=false
#spring.datasource.username=crm_prod
#spring.datasource.password=crmprod@12345
spring.datasource.username=root
#spring.datasource.password=1@34567bDG
spring.datasource.password=1@34567b
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.initialization-mode=always


#--------------default tennant db connection details-------

#spring.datasource.tenant.url=jdbc:mysql://ss-master-db:3306/xcrm_prod?autoReconnect=true&verifyServerCertificate=false&useSSL=false&requireSSL=false
#spring.datasource.tenant.url=jdbc:mysql://192.168.1.81:3306/xcrm_prod?autoReconnect=true&verifyServerCertificate=false&useSSL=false&requireSSL=fals
spring.datasource.tenant.url=jdbc:mysql://localhost:3306/ss_template_builder?autoReconnect=true&verifyServerCertificate=false&useSSL=false&requireSSL=false
###
# Connection pool configuration
###
spring.datasource.hikari.connection-test-query=SELECT 1 FROM DUAL
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maxWait=1000
spring.datasource.hikari.maxActive=100
spring.datasource.hikari.minimum-idle=3
spring.datasource.hikari.maxIdle-idle=20
spring.datasource.hikari.maximum-pool-size=12
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.jpa.hibernate.ddl-auto=none

###
# The SQL dialect makes Hibernate generate better SQL for the chosen database
###
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.id.new_generator_mappings = false
spring.jpa.properties.hibernate.format_sql = false
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

#logging.level.org.springframework.security.oauth2=debug

log4j.category.com.zaxxer.hikari=INFO
logging.level.org.hibernate.SQL=INFO
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#logging.level.org.springframework=DEBUG
