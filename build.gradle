
plugins {
id 'org.springframework.boot' version '2.2.5.RELEASE'
id 'io.spring.dependency-management' version '1.0.9.RELEASE'
id 'org.asciidoctor.convert' version '1.5.8'
id 'java'
}

group = 'com.salzshark'
//version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
developmentOnly
runtimeClasspath {
extendsFrom developmentOnly
}
}

repositories {
mavenCentral()
}

ext {
set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
implementation 'org.springframework.boot:spring-boot-starter-actuator'
implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
implementation 'org.springframework.boot:spring-boot-starter-web'
developmentOnly 'org.springframework.boot:spring-boot-devtools'

//https://mvnrepository.com/artifact/org.apache.tomcat.embed/tomcat-embed-jasper
    compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-jasper', version:'9.0.31'

    // JSTL
    compile group: 'jstl', name: 'jstl', version: '1.2'

      // Java Servlet API
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.0'
    //compile group: 'javax.servlet', name: 'servlet-api', version:'2.5'
   
    // https://mvnrepository.com/artifact/org.eclipse.jdt.core.compiler/ecj
//    compile group: 'org.eclipse.jdt.core.compiler', name: 'ecj', version: '4.6.1'
   
        //cache
    // https://mvnrepository.com/artifact/org.springframework/spring-context-support
   compile group: 'org.springframework', name: 'spring-context-support', version: '4.1.0.RELEASE'
   
   // https://mvnrepository.com/artifact/net.sf.ehcache/ehcache
   compile group: 'net.sf.ehcache', name: 'ehcache', version: '2.10.6'
   

//compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version:'2.3.2.RELEASE'
runtimeOnly 'mysql:mysql-connector-java'
compile group: 'org.apache.commons', name: 'commons-lang3', version:'3.8.1'
testImplementation('org.springframework.boot:spring-boot-starter-test') {
exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
}
}

test {
outputs.dir snippetsDir
useJUnitPlatform()
}

asciidoctor {
inputs.dir snippetsDir
dependsOn test
}







